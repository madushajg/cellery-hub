swagger: "2.0"
info:
  version: "0.0.1"
  title: "Cellery Hub API"
  description: "Cellery Hub API"
  contact:
    email: "architecture@wso2.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0"
host: "api.hub.cellery.io"
basePath: "/api/0.1.0"
schemes:
- "https"

paths:
  /:
    get:
      operationId: "ping"
      summary: "Ping the API"
      description: "Ping the API to validate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/validateUserQueryParam'
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/PingResponse'
        405:
          description: "Invalid input"
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orgs:
    get:
      operationId: "listOrgs"
      summary: "Retrieve organizations"
      description: "Retrieve organizations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/orgNameQueryParam'
        - $ref: '#/parameters/limitQueryParam'
        - $ref: '#/parameters/offsetQueryParam'
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/OrgListResponse'
        405:
          description: "Invalid input"
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      operationId: "createOrg"
      summary: "Create organization"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgCreateBody"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /orgs/{orgName}:
    get:
      operationId: "getOrg"
      summary: "Get a specific organization"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNamePathParam"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OrgResponse"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: "updateOrganization"
      summary: "Update an existing organization"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNamePathParam"
      - $ref: "#/parameters/orgUpdateBody"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: "deleteOrganization"
      summary: "Delete an organization"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNamePathParam"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /orgs/users/{userId}:
    get:
      operationId: "getUserOrgs"
      summary: "Get user's organizations"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNameQueryParam"
      - $ref: '#/parameters/limitQueryParam'
      - $ref: '#/parameters/offsetQueryParam'
      - $ref: "#/parameters/userIdPathParam"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OrgResponse"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /images:
    get:
      operationId: "listImages"
      summary: "Search images of any organization"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNameQueryParam"
      - $ref: "#/parameters/imageNameQueryParam"
      - $ref: '#/parameters/orderByQueryParam'
      - $ref: '#/parameters/limitQueryParam'
      - $ref: '#/parameters/offsetQueryParam'
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ImagesListResponse"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /images/{orgName}:
    get:
      operationId: "listOrgImages"
      summary: "Search images of a specific organization"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNamePathParam"
      - $ref: "#/parameters/imageNameQueryParam"
      - $ref: '#/parameters/orderByQueryParam'
      - $ref: '#/parameters/limitQueryParam'
      - $ref: '#/parameters/offsetQueryParam'
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OrgImagesListResponse"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /images/{orgName}/{imageName}:
    get:
      operationId: "getImage"
      summary: "get a specific image"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNamePathParam"
      - $ref: "#/parameters/imageNamePathParam"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ImageResponse"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: "updateImage"
      summary: "Update an existing image"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNamePathParam"
      - $ref: "#/parameters/imageNamePathParam"
      - $ref: "#/parameters/imageUpdateBody"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: "deleteImage"
      summary: "Delete an image"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNamePathParam"
      - $ref: "#/parameters/imageNamePathParam"
      - $ref: "#/parameters/imageUpdateBody"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /images/users/{userId}:
    get:
      operationId: "listUserImages"
      summary: "Find images which user is the first author"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/userIdPathParam"
      - $ref: "#/parameters/orgNameQueryParam"
      - $ref: "#/parameters/imageNameQueryParam"
      - $ref: '#/parameters/orderByQueryParam'
      - $ref: '#/parameters/limitQueryParam'
      - $ref: '#/parameters/offsetQueryParam'
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ImagesListResponse"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /artifacts/{orgName}/{imageName}/{artifactVersion}:
    get:
      operationId: "getArtifact"
      summary: "Get a specific artifact"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNamePathParam"
      - $ref: "#/parameters/imageNamePathParam"
      - $ref: "#/parameters/artifactVersionPathParam"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ArtifactResponse"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: "updateArtifact"
      summary: "Update an existing artifact"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNamePathParam"
      - $ref: "#/parameters/imageNamePathParam"
      - $ref: "#/parameters/artifactVersionPathParam"
      - $ref: "#/parameters/artifactUpdateBody"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: "deleteArtifact"
      summary: "Delete an existing artifact"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNamePathParam"
      - $ref: "#/parameters/imageNamePathParam"
      - $ref: "#/parameters/artifactVersionPathParam"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /artifacts/{orgName}/{imageName}:
    get:
      operationId: "listArtifacts"
      summary: "Get a specific Image with versions"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNamePathParam"
      - $ref: "#/parameters/imageNamePathParam"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ArtifactListResponse"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /auth/token:
    get:
      operationId: "getAuthToken"
      summary: "Get tokens"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/authCodeQueryParam"
      - $ref: "#/parameters/callbackUrlQueryParam"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: "exchangeToken"
      summary: "token exchange request"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/authCodeQueryParam"
      - $ref: "#/parameters/callbackUrlQueryParam"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /auth/revoke:
    get:
      operationId: "revokeEndpoint"
      summary: "Revoke endpoint"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: "revokeCliToken"
      summary: "revoke CLI token"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/orgs/{orgName}:
    get:
      operationId: "getOrgUsers"
      summary: "Get the users in an organization"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/orgNamePathParam"
      - $ref: '#/parameters/limitQueryParam'
      - $ref: '#/parameters/offsetQueryParam'
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/OrgUsersListResponse"
        405:
          description: "Invalid Input"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
parameters:
  orgCreateBody:
    name: "organization"
    in: "body"
    description: "Organization which needs to be created"
    required: true
    schema:
      $ref: "#/definitions/OrgCreateRequest"
  imageUpdateBody:
    name: "image"
    in: "body"
    description: "Image which needs to be updated"
    required: true
    schema:
      $ref: "#/definitions/ImageUpdateRequest"
  orgUpdateBody:
    name: "organization"
    in: "body"
    description: "Organization which needs to be updated"
    required: true
    schema:
      $ref: "#/definitions/OrgUpdateRequest"
  artifactUpdateBody:
    name: "artifact"
    in: "body"
    description: "Artifact which needs to be updated"
    required: true
    schema:
      $ref: "#/definitions/ArtifactUpdateRequest"
  orgNamePathParam:
    name: "orgName"
    in: "path"
    description: "Name of the organization"
    required: true
    type: "string"
  imageNamePathParam:
    name: "imageName"
    in: "path"
    description: "Name of the image"
    required: true
    type: "string"
  artifactVersionPathParam:
    name: "artifactVersion"
    in: "path"
    description: "Version of the artifact"
    required: true
    type: "string"
  userIdPathParam:
    name: "userId"
    in: "path"
    description: "UserId of the user"
    required: true
    type: "string"
  orgNameQueryParam:
    name: "orgName"
    in: "query"
    description: "Name of the organization"
    required: false
    type: "string"
  imageNameQueryParam:
    name: "imageName"
    in: "query"
    description: "Name of the Image"
    required: false
    type: "string"
  imageOrderByQueryParam:
    name: "orderBy"
    in: "query"
    description: "The attribute to order the images"
    required: false
    type: string
  limitQueryParam:
    name: "limit"
    in: "query"
    description: "Number of results returned for pagination"
    required: true
    type: integer
  offsetQueryParam:
    name: "offset"
    in: "query"
    description: "Offset of the result set returned for pagination"
    required: true
    type: integer
  orderByQueryParam:
    name: "orderBy"
    in: "query"
    description: "Enum to oder result"
    required: true
    type: "string"
  validateUserQueryParam:
    name: "validateUser"
    in: "query"
    description: "If true check whether the user is valid"
    required: false
    type: "boolean"
  authCodeQueryParam:
    name: "authCode"
    in: "query"
    description: "Auth code retrieved from a OIDC provider"
    required: false
    type: "string"
  callbackUrlQueryParam:
    name: "callbackUrl"
    in: "query"
    description: "If true check whether the user is valid"
    required: false
    type: "string"
    
definitions:
  OrgCreateRequest:
    type: "object"
    properties:
      orgName:
        type: "string"
      description:
        type: "string"
      websiteUrl:
        type: "string"
      defaultVisibility:
        type: "string"
  ImageUpdateRequest:
    type: "object"
    properties:
      description:
        type: "string"
      summary:
        type: "string"
      keywords:
        type: array
        items:
          type: "string"
  OrgUpdateRequest:
    type: "object"
    properties:
      description:
        type: "string"
      summary:
        type: "string"
  ArtifactUpdateRequest:
    type: "object"
    properties:
      description:
        type: "string"
  OrgResponse:
    type: "object"
    properties:
      description:
        type: "string"
      websiteUrl:
        type: "string"
      author:
        type: "string"
      createdTimestamp:
        type: "string"
  ImageResponse:
    type: "object"
    properties:
      imageId:
        type: "string"
      orgName:
        type: "string"
      imageName:
        type: "string"
      summary:
        type: "string"
      description:
        type: "string"
      firstAuthor:
        type: "string"
      visibility:
        type: "string"
      pushCount:
        type: "string"
      pullCount:
        type: "string"
      keywords:
        type: array
        items:
          type: "string"
      userRole:
        type: "string"
  ArtifactResponse:
    type: "object"
    properties:
      description:
        type: "string"
      pullCount:
        type: "integer"
      lastAuthor:
        type: "string"
      updatedTimestamp:
        type: "string"
      metadata:
        type: "object"
  OrgListResponse:
    type: object
    properties:
      count:
        type: integer
        description: "total count of organizations"
      data:
        type: array
        items:
          $ref: '#/definitions/OrgListResponseAtom'
  ImagesListResponse:
    type: object
    properties:
      count:
        type: integer
        description: "total count of organizations"
      data:
        type: array
        items:
          $ref: '#/definitions/ImagesListResponseAtom'
  ArtifactListResponse:
    type: object
    properties:
      count:
        type: integer
        description: "total count of artifacts"
      data:
        type: array
        items:
          $ref: '#/definitions/ArtifactListResponseAtom'
  OrgListResponseAtom:
    type: object
    properties:
      orgName:
        type: string
      description:
        type: string
      membersCount:
        type: integer
      imageCount:
        type: integer
  ArtifactListResponseAtom:
    type: object
    properties:
      artifactImageId:
        type: string
      artifactId:
        type: string
      description:
        type: integer
      pullCount:
        type: integer
      lastAuthor:
        type: string
      updatedTimestamp:
        type: integer
      artifactVersion:
        type: integer
  OrgImagesListResponse:
    type: object
    properties:
      count:
        type: integer
        description: "total count of organizations"
      data:
        type: array
        items:
          $ref: '#/definitions/OrgImagesListResponseAtom'
  OrgUsersListResponse:
    type: object
    properties:
      count:
        type: integer
        description: "total count of users in the organization"
      users:
        type: array
        items:
          $ref: '#/definitions/OrgUsersListResponseAtom'
  ImagesListResponseAtom:
    type: object
    properties:
      orgName:
        type: string
      imageName:
        type: string
      description:
        type: string
      pullCount:
        type: integer
      updatedTeimstamp:
        type: string
      visibility:
        type: string
  OrgImagesListResponseAtom:
    type: object
    properties:
      imageName:
        type: string
      description:
        type: string
      pullCount:
        type: integer
      updatedTeimstamp:
        type: string
      visibility:
        type: string
  OrgUsersListResponseAtom:
    type: object
    properties:
      userId:
        type: string
      displayName:
        type: string
      firstName:
        type: integer
      lastName:
        type: string
      email:
        type: string
      roles:
        type: string
  PingResponse:
    type: object
    properties:
      status:
        type: "string"
        description: "status of API"
      isUserSessionValid:
        type: boolean
        description: "validity of the user"
  ErrorResponse:
    type: "object"
    properties:
      code:
        type: integer
        description: "API specific error code"
      message:
        type: "string"
        description: "The summarized error message"
      description:
        type: "string"
        description: "Description about the error occurred"